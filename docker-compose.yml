version: '3.8'

services:
  db:
    image: postgres:13
    container_name: todo2_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - todo-network

  kratos:
    image: oryd/kratos:latest
    container_name: kratos
    depends_on:
      - db
    environment:
      - DSN=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable&max_conn_lifetime=1h
    volumes:
      - ./kratos:/etc/config/kratos/
    command:
      serve --config /etc/config/kratos/kratos.yml
    ports:
      - "4433:4433"
      - "4434:4434"
    networks:
      - todo-network

  kratos-migrate:
    image: oryd/kratos:latest
    container_name: kratos-migrate
    environment:
      - DSN=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable
    command: migrate sql -e --yes postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable
    depends_on:
      - db
    networks:
      - todo-network

  backend:
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    container_name: todo2_backend
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: db
      DB_PORT: "5432"
      APP_PORT: ${APP_PORT}
      KRATOS_URL: http://kratos:4433
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - db
      - kratos
      - minio
    networks:
      - todo-network

  frontend:
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    container_name: todo2_frontend
    environment:
      API_URL: ${API_URL}
    ports:
      - "3000:3000"
    networks:
      - todo-network

  minio:
    image: minio/minio
    container_name: minio2
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - todo-network

networks:
  todo-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  minio_data:
    driver: local
